View(x4)
names(x4)[names(x4) == 'WeightPop'] <- 'PopRemote'
names(x4)[names(x4) == 'WeightPopRemote'] <- 'Pop'
x4 <- subset(x4, select=(2,1))
x4 <- subset(x4, select=[2,1])
x4 <- subset(x4, select=c(2,1))
x4
View(x4)
hist(x4$Pop)
hist(x4$PopRemote)
x4[x4=="NA"] <- NA
x4
View(x4)
hist(x4$Pop)
class(x4$Pop)
x4$PopRemoteValue <- x4$PopRemote/x4$Pop
x5 <- x4$PopRemote
x5 <- as.data.frame(x5)
View(x5)
x6 <- x4$Pop
x6 <- as.data.frame(x6)
x4 <- cbind(x5,x6)
View(x4)
x4 <- rbind(x5,x6)
View(x4)
tranpose
library(data.table)
transpose
x1 <- transpose(x4)
View(x1)
x1$Country <- WCountry
x1 <- subset(x1, select=-3)
x1 <- rbind(x5,x6 make.row.names = TRUE)
x1 <- rbind(x5,x6, make.row.names = TRUE)
x1 <- transpose(x1)
View(WCountry)
x1 <- rbind(WCountry, x1)
x1 <- cbind(WCountry, x1)
x1
View(x1)
x1 <- subset(x1, select=-1)
x1
View(x1)
names(x1)[names(x1)=='v1'] <- 'PopRemote'
names(x1)[names(x1)=='v2'] <- 'Pop'
x1
View(WRemote1)
View(x1)
names(x1)[names(x1)=='V2'] <- 'Pop'
names(x1)[names(x1)=='V1'] <- 'PopRemote'
x1$Remotevalue <- x1$PopRemote/x1$Pop
View(x1)
View(x3)
View(x2)
View(RemoteP)
x2 <- by(RemoteP$Area*RemoteP$Popdens, RemoteP$Country, sum)
x2 <- do.call(as.list(as.data.frame(x2)))
x2 <- do.call(as.list,as.data.frame(x2)))
x2 <- do.call(as.list,as.data.frame(x2))
x2 <- do.call(as.data.frame,as.list(x2)))
x2 <- do.call(as.data.frame,as.list(x2))
x2 <- do.call(as.list(x2))
x2 <- as.list(x2)
x2 <- as.data.frame(x2)
View(x2)
View(WRemote)
View(WRemote1)
View(RemoteP)
View(x4)
View(x4)
View(x1)
hist(x1$Remotevalue)
View(RemoteP)
load("D:/Users/Dan-W/OneDrive/Work/.RData")
View(RemoteP)
x2 <- by(RemoteP$Popdens*RemoteP$Area, RemoteP$Country, sum)
x3 <- by(RemoteP$Remote*RemoteP$Popdens*RemoteP$Area, RemoteP$Country, sum)
CountryData <- as.data.frame(x3)
x2 <- as.list(x2)
x3 <-as.list(x3)
View(x2)
View(x3)
View(x2)
View(WCountry)
View(WRemote)
View(x1)
writecsv(x1, "Countries.csv"
)
write.csv(x1, "Countries.csv")
View(WRemote)
View(WRemote1)
View(x1)
View(RemoteP)
wtd.hst
wtd.hist
library(weights)
wtd.hist(RemoteP$Remote, weights=RemoteP$Popdens*RemoteP$Area)
wtd.hist(RemoteP$Remote, weight=RemoteP$Popdens*RemoteP$Area)
sum(RemoteP$Remote*RemoteP$Popdens*RemoteP$Area)
sum(RemoteP$Popdens*RemoteP$Area)
sd(RemoteP$RemoteP$Remote*RemoteP$Popdens*RemoteP$Area)
sd(RemoteP$RemoteP$Remote*RemoteP$Popdens*RemoteP$Area,NA=FALSE)
help(sd)
sd(RemoteP$RemoteP$Remote*RemoteP$Popdens*RemoteP$Area,na.rm=TRUE)
View(x1)
View(RemoteWSum)
View(RemoteP)
RemoteP$PopRemote <- RemoteP$Remote*RemoteP$Popdens*RemoteP$Area
RemoteP$Pop <- RemoteP$Popdens*RemoteP$Area
View(RemoteP)
sd(RemoteP$Remote)
install.packages("SDMTools", lib="D:/Program Files/R/R-3.5.0/library")
wtd.sd
wt.sd
library(SDMTools)
wt.sd
wt.sd(RemoteP$Remote, RemoteP$Pop)
wt.mean
wt.mean(RemoteP$Remote, RemoteP$Pop)
View(RemoteP)
library(weights)
plot(Remote)
wtd.hist(RemoteP$Remote, weights=RemoteP$Area)
wtd.hist(RemoteP$Remote, weights=RemoteP$Pop)
wtd.hist(RemoteP$Remote, weight=RemoteP$Pop)
nls
install.packages("wdi", lib="D:/Program Files/R/R-3.5.0/library")
install.packages("WDIO", lib="D:/Program Files/R/R-3.5.0/library")
install.packages("WDI", lib="D:/Program Files/R/R-3.5.0/library")
WDI(country="SW",  indicator = "NY.GNS.ICTR.GN.ZS", start = 2005,
end = 2011, extra = TRUE, cache = NULL)
library(WDI)
WDI(country="SW",  indicator = "NY.GNS.ICTR.GN.ZS", start = 2005,
end = 2011, extra = TRUE, cache = NULL)
WDI(country="SZ",  indicator = "NY.GNS.ICTR.GN.ZS", start = 2005,
end = 2011, extra = TRUE, cache = NULL)
WDI(country="GB",  indicator = "NY.GNS.ICTR.GN.ZS", start = 2005,
end = 2011, extra = TRUE, cache = NULL)
WDI(country="GB",  indicator = "NY.GDP.MKTP.CD", start = 1968,
end = 2017, extra = TRUE, cache = NULL)
WDI(country="SZ",  indicator = "NY.GDP.MKTP.CD", start = 1968,
end = 2017, extra = TRUE, cache = NULL)
WDI(country="all",  indicator = "NY.GDP.MKTP.CD", start = 1968,
end = 2017, extra = TRUE, cache = NULL)
WDI(country="all",  indicator = "NY.GDP.MKTP.CD", start = 2015,
end = 2016, extra = TRUE, cache = NULL)
wditest <- WDI(country="all",  indicator = "NY.GDP.MKTP.CD", start = 2015,
end = 2016, extra = TRUE, cache = NULL)
wditest
view(wditest)
View(wditest)
help(wdo)
help(wdi)
help(WDI)
help(raster)
library(rasterize)
install.packages("rasterize", lib="D:/Program Files/R/R-3.5.0/library")
roadsshape <- "D:\\Users\\Dan-W\\OneDrive\\Work\\Remoteness\\Remoteness maps\\Roads news.shp"
roadsraster <- raster(nrows=3480,ncols=8640,xmn=-180,xmx=180,ymn=-60,ymx=85)
roadsraster <- rasterize(roadsshape,roadsraster,1)
class(roadsshape)
roadshape <- shapefile(roadsshape)
roadsraster <- rasterize(roadsshape,roadsraster,1)
class(roadsshape)
roadsshape <- SpatialLines(roadshape, proj4string=CRS("+init=epsg:4326"))
install.packages("maptools", lib="D:/Program Files/R/R-3.5.0/library")
install.packages("maps", lib="D:/Program Files/R/R-3.5.0/library")
install.packages("maptools", lib="D:/Program Files/R/R-3.5.0/library")
library(maptools)
install.packages("maps", lib="D:/Program Files/R/R-3.5.0/library")
library(maps)
roadshape <- readShapeLines(roadshape)
roadsshape <- "D:\\Users\\Dan-W\\OneDrive\\Work\\Remoteness\\Remoteness maps\\Roads news.shp"
roadshape <- readShapeLines(roadshape)
roadshape <- readShapeLines(roadsshape)
roadsraster <- rasterize(roadsshape,roadsraster)
class(roadsshape)
library(rgdal)
library(rgeos)
install.packages("rgeos", lib="D:/Program Files/R/R-3.5.0/library")
library(rgeos)
roadshape <- readOGR(roadsshape)
class(roadshape)
roadsraster <- rasterize(roadshape,roadsraster)
LogPopdens <- raster("D:\\Users\\Dan-W\\OneDrive\\Work\\Remoteness\\Remoteness maps\\Rasters\\Log pop dens.tif")
LogPopdens[is.na(LogPopdens)] <- 1
plot(LogPopswna)
plot(LogPopdens)
LogPopdens[LogPopdens<0] <- 0
writeRaster(LogPopdens,"D:\\Users\\Dan-W\\OneDrive\\Work\\Remoteness\\Remoteness maps\\Rasters\\Log pop dens fixed.tif")
View(WCountry)
View(points2)
View(points2)
CLCS <- raster("D:\\Users\\Dan-W\\OneDrive\\Work\\Remoteness\\Remoteness maps\\Rasters\\"CLCSM.tif"")
CLCS <- raster("D:\\Users\\Dan-W\\OneDrive\\Work\\Remoteness\\Remoteness maps\\Rasters\\"CLCSM.tif")
CLCS <- raster("D:\\Users\\Dan-W\\OneDrive\\Work\\Remoteness\\Remoteness maps\\Rasters\\CLCSM.tif")
Area <- raster("D:\\Users\\Dan-W\\OneDrive\\Work\\Remoteness\\Remoteness maps\\Rasters\\Area.txt")
pointsNEW <- rasterToPoints(CLCS)
head(pointsNEW)
pointsNEW <- subset(PointsNEW, select=1:2)
pointsNEW <- subset(pointsNEW, select=1:2)
head(pointsNEW)
coords2country(pointsNEW)
library(rworldmap)
library(rworldmapxtra)
library(rworldxtra)
coords2country(pointsNEW)
AreaCLCSM <- Area*CLCS
library(plotly)
library(weights)
AreaCLCSMdf <- rasterToPoints(AreaCLCSM)
AreaCLCSMdf <- as.data.frame(AreaCLCSMdf)
head(AreaCLCSMdf)
rm(AreaCLCSM)
rm(AreaCLCSMdf)
View(coords2country)
indices <- coords2country(pointsNEW)
indices <- coords2country(pointsNEW)
rm(WCountry)
rm(WRemote)
rm(Remote*)
rm(RemotP)
rm(RemoteP)
rm(Remote)
rm(points)
rm(points2)
rm(Popdens)
rm(PopdensP)
rm(x1)
rm(x2)
rm(x3)
rm(x4)
rm(x5)
rm(x6)
rm(WRemote1)
rm(RemoteWSum)
rm(RemoteWSum)
rm(LogPopdens)
View(countriesdf)
View(countries)
rm(countries)
countries <- coords2country(pointsNEW)
View(coords2country)
coordscountrylow <- function(points)
{countriesSP <- getMap(resolution='low')
pointsSP = SpatialPoints(points,proj4string=CRS(proj4string(countriesSP)))
indices = over(pointsSP, countriesSP)
indices$ADMIN
}
View(coordscountrylow)
countries <- coordscountrylow(pointsNEW)
countriesdf <- as.data.frame(countries)
View(countriesdf)
write.csv(countries.df,"countriesdf.csv")
write.csv(countriesdf,"countriesdf.csv")
getwd()
View(countriesdf)
View(pointsNEW)
PCA <- read.csv(PCA.csv)
PCA <- read.csv("PCA.csv")
library(readr)
PCA <- read_csv("PCA.csv")
View(PCA)
PCA <- raster(PCA2raster.tif)
PCA <- raster("PCA2raster.tif")
PCA <- rasterToPoints(PCA)
View(PCA)
PCA <- as.data.frame(PCA)
countriesPCA <- coordscountrylow(subset(PCA, select=c(1,2))
)
library(rworldmap)
countriesPCA <- coordscountrylow(subset(PCA, select=c(1,2)))
View(pointsNEW)
View(countriesdf)
countriesPCAdf <- as.data.frame(countriesPCA)
View(PCA)
PCA[4] <- countriesPCAdf
View(PCA)
View(coordscountrylow)
View(PCA)
load("~/.RData")
Chad2 <- shapefile("tcdadm2.shp")
getwd()
getwd()
View(PCA)
View(CLCS)
View(countriesdf)
View(countriesPCAdf)
getwd()
getwd()
rm(list=ls())
message("trying","A")
countries="ALB"
year=2015
i <- 1
j <- 1
PL <- 1.9
message(countries[i]," ",year[j],": trying",PL)
param <- paste0("Countries=",paste(countries,collapse=","),"&RefYears=",paste(year,collapse=","),"&PovertyLine=",PL)
url <- paste0("http://iresearch.worldbank.org/PovcalNet/PovcalNetAPI.ashx?",param,"&display=c")
temp <- tryCatch({read.csv(url,header=T)},error=function(e){return(NULL)})
temp <- tryCatch({read.csv(url,header=T)},error=function(e){return(NULL)})
temp$HeadCount
temp <- tryCatch({read.csv(url,header=T)},error=function(e){return(NULL)})$Headcount
param <- paste0("Countries=",paste(countries,collapse=","),"&RefYears=",paste(year,collapse=","),"&PovertyLine=",PL)
url <- paste0("http://iresearch.worldbank.org/PovcalNet/PovcalNetAPI.ashx?",param,"&display=c")
temp <- tryCatch({read.csv(url,header=T)},error=function(e){return(NULL)})$Headcount
temp <- tryCatch({read.csv(url,header=T)},error=function(e){return(NULL)})
diff <- targetHC - temp$HeadCount
targetHC=0.2
diff <- targetHC - temp$HeadCount
(targetHC/0.5)*med
med <- temp$Median
next <- (targetHC/0.5)*med
(targetHC/0.5)*med
((targetHC/0.5)*med)*12/365.25
med/0.25*targetHC^2
(med/0.25)*targetHC^2
0.2^2
med
(temp$Median)*12/365.25
(med/0.25)*targetHC^2
med <- (temp$Median)*12/365.25
(med/0.25)*targetHC^2
med/0.25*0.7^2
targetHC=0.4
(med/0.25)*targetHC^2
targetHC=0.6
(med/0.25)*targetHC^2
targetHC=0.9
(med/0.25)*targetHC^2
(med/0.25)*targetHC^(2^sign(0.5-targetHC))
(med/0.25)*targetHC^(3^sign(0.5-targetHC))
targetHC=0.1
(med/0.25)*targetHC^(2^sign(0.5-targetHC))
(med/0.25)*targetHC^(3^sign(0.5-targetHC))
?round
precision=0.01
round((med/0.25)*targetHC^(2^sign(0.5-targetHC))/precision)*precision
message("######",countries[i]," ",year[j],"######")
PL <- initialguess
param <- paste0("Countries=",paste(countries,collapse=","),"&RefYears=",paste(year,collapse=","),"&PovertyLine=",PL)
url <- paste0("http://iresearch.worldbank.org/PovcalNet/PovcalNetAPI.ashx?",param,"&display=c")
temp <- tryCatch({read.csv(url,header=T)},error=function(e){return(NULL)})
med <- (temp$Median)*12/365.25
PLn <- round((med/0.25)*targetHC^(2^sign(0.5-targetHC))/precision)*precision
message("Trying: ",PLn)
param <- paste0("Countries=",paste(countries,collapse=","),"&RefYears=",paste(year,collapse=","),"&PovertyLine=",PLn)
url <- paste0("http://iresearch.worldbank.org/PovcalNet/PovcalNetAPI.ashx?",param,"&display=c")
temp <- tryCatch({read.csv(url,header=T)},error=function(e){return(NULL)})
diff <- targetHC - temp$HeadCount
targetHC=0.2
initialguess=1.9
message("######",countries[i]," ",year[j],"######")
PL <- initialguess
param <- paste0("Countries=",paste(countries,collapse=","),"&RefYears=",paste(year,collapse=","),"&PovertyLine=",PL)
url <- paste0("http://iresearch.worldbank.org/PovcalNet/PovcalNetAPI.ashx?",param,"&display=c")
temp <- tryCatch({read.csv(url,header=T)},error=function(e){return(NULL)})
med <- (temp$Median)*12/365.25
PLn <- round((med/0.25)*targetHC^(2^sign(0.5-targetHC))/precision)*precision
message("Trying: ",PLn)
param <- paste0("Countries=",paste(countries,collapse=","),"&RefYears=",paste(year,collapse=","),"&PovertyLine=",PLn)
url <- paste0("http://iresearch.worldbank.org/PovcalNet/PovcalNetAPI.ashx?",param,"&display=c")
temp <- tryCatch({read.csv(url,header=T)},error=function(e){return(NULL)})
diff <- targetHC - temp$HeadCount
round((med/0.25)*targetHC^(1.5^sign(0.5-targetHC))/precision)*precision
message("######",countries[i]," ",year[j],"######")
PL <- initialguess
message("Trying: ",PL)
param <- paste0("Countries=",paste(countries,collapse=","),"&RefYears=",paste(year,collapse=","),"&PovertyLine=",PL)
url <- paste0("http://iresearch.worldbank.org/PovcalNet/PovcalNetAPI.ashx?",param,"&display=c")
temp <- tryCatch({read.csv(url,header=T)},error=function(e){return(NULL)})
med <- (temp$Median)*12/365.25
inhead <- temp$HeadCount
indiff <- targetHC - temp$HeadCount
PL <- round((med/0.25)*targetHC^(1.5^sign(0.5-targetHC))/precision)*precision
message("Trying: ",PLn)
param <- paste0("Countries=",paste(countries,collapse=","),"&RefYears=",paste(year,collapse=","),"&PovertyLine=",PL)
url <- paste0("http://iresearch.worldbank.org/PovcalNet/PovcalNetAPI.ashx?",param,"&display=c")
temp <- tryCatch({read.csv(url,header=T)},error=function(e){return(NULL)})
ndiff <- targetHC - temp$HeadCount
rm(list=ls())
targetHC=0.2
countries="ALB"
year=2015
initialguess=1.9
precision=0.01
message("######",countries[i]," ",year[j],"######")
PL <- initialguess
message("Trying: ",PL)
param <- paste0("Countries=",paste(countries,collapse=","),"&RefYears=",paste(year,collapse=","),"&PovertyLine=",PL)
url <- paste0("http://iresearch.worldbank.org/PovcalNet/PovcalNetAPI.ashx?",param,"&display=c")
temp <- tryCatch({read.csv(url,header=T)},error=function(e){return(NULL)})
med <- (temp$Median)*12/365.25
inhead <- temp$HeadCount
indiff <- targetHC - temp$HeadCount
PL <- round((med/0.25)*targetHC^(1^sign(0.5-targetHC))/precision)*precision
message("Trying: ",PLn)
param <- paste0("Countries=",paste(countries,collapse=","),"&RefYears=",paste(year,collapse=","),"&PovertyLine=",PL)
url <- paste0("http://iresearch.worldbank.org/PovcalNet/PovcalNetAPI.ashx?",param,"&display=c")
temp <- tryCatch({read.csv(url,header=T)},error=function(e){return(NULL)})
ndiff <- targetHC - temp$HeadCount
round((med/0.25)*targetHC^(1^sign(0.5-targetHC))/precision)*precision
?while
??while
required.packages <- c("reshape2","ggplot2","data.table","WDI","XML","readxl")
lapply(required.packages, require, character.only=T)
setwd("G:/My Drive/Work/GitHub/poverty_predictions")
all_parameters <- fread("project_data/all_parameters.csv")
afg.som.lby.param <- data.table(A=c(0.935463769,0.5760727,0.88737242,0.666110634,1.002559972,0.613658334)
,B=c(-1.476794803,0.856948964,-1.254176897,0.95205282,-1.341360921,0.934277217)
,C=c(0.083512829,0.49178234,0.196100839,0.562072863,0.241518659,0.607012527)
,svy=c("AFG_3","AFG_3","SOM_3","SOM_3","LBY_3","LBY_3"),
year=c(2016.5,2016.5,2017,2017,2008,2008),
mean=c(2.788346962/12*365.2424,2.788346962/12*365.2424,1.69211737786/12*365.2424,1.69211737786/12*365.2424,4.9507954/12*365.2424,4.9507954/12*365.2424),
ppp=c(22.8388105,22.8388105,0.674879848994,0.674879848994,0.6577641,0.6577641),
type=rep(c("GQ","Beta"),3)
)
ext <- fread("project_data/povcalout.csv")
#all_parameters <- rbind(all_parameters, afg.som.lby.param)
all_parameters <- merge(all_parameters, ext[,c(4,8,21,34)], by.x=c("svy","year"), by.y=c("C0","DataYear"),all.x=T)
#all_parameters[which(svy=="AFG_3")]$CountryName <- "Afghanistan"
#all_parameters[which(svy=="SOM_3")]$CountryName <- "Somalia"
#all_parameters[which(svy=="LBY_3")]$CountryName <- "Libya"
#Only most recent surveys
recent_years <- all_parameters[all_parameters[, .I[which.max(year)], by=.(svy,type)]$V1]
parameters_GQ <- recent_years[recent_years[, .I[which.max(year)], by=svy]$V1]
parameters_Beta <- recent_years[recent_years[, .I[which.max(year)], by=svy]$V1+1]
beta.list <- list()
pb <- txtProgressBar(0,nrow(parameters_Beta),style=3)
for(i in 1:nrow(parameters_Beta)){
svy <- parameters_Beta[i]
mean <- svy$mean*12/365.2424
pop <- svy$ReqYearPopulation*1000
df <- data.table(P=seq(1/pop,1,1/pop))
df$p <- 1/pop
df$z <- mean*(1-(svy$A*(df$P^svy$B)*((1-(df$P))^svy$C)*((svy$B/df$P)-(svy$C/(1-df$P)))))
beta.list[[i]] <- df
setTxtProgressBar(pb,i)
}
beta <- rbindlist(beta.list)
rm(beta.list)
beta <- beta[order(z)]
beta$P <- cumsum(beta$p)
beta$P <- beta$P/max(beta$P)
GQ.list <- list()
pb <- txtProgressBar(0,nrow(parameters_GQ),style=3)
for(i in 1:nrow(parameters_GQ)){
svy <- parameters_GQ[i]
mean <- svy$mean*12/365.2424
pop <- svy$ReqYearPopulation*1000
e <- -(svy$A+svy$B+svy$C+1)
m <- svy$B^2-4*svy$A
n <- 2*svy$B*e-4*svy$C
df <- data.table(P=seq(1/pop,1,1/pop))
df$p <- 1/pop
df$z <- mean*(-0.5*svy$B-(((2*m*df$P+n)*(m*df$P^2+n*df$P+e^2))^(-0.5))/4)
GQ.list[[i]] <- df
setTxtProgressBar(pb,i)
}
GQ <- rbindlist(GQ.list)
rm(GQ.list)
GQ <- GQ[order(z)]
GQ$P <- cumsum(GQ$p)
GQ$P <- GQ$P/max(GQ$P)
View(GQ)
GQ.list <- list()
svy <- parameters_GQ[i]
mean <- svy$mean*12/365.2424
pop <- svy$ReqYearPopulation*1000
e <- -(svy$A+svy$B+svy$C+1)
m <- svy$B^2-4*svy$A
n <- 2*svy$B*e-4*svy$C
df <- data.table(P=seq(1/pop,1,1/pop))
df$p <- 1/pop
df$z <- mean*(-0.5*svy$B-(((2*m*df$P+n)*(m*df$P^2+n*df$P+e^2))^(-0.5))/4)
View(df)
svy <- parameters_GQ[i]
mean <- svy$mean*12/365.2424
pop <- svy$ReqYearPopulation*1000
e <- -(svy$A+svy$B+svy$C+1)
m <- svy$B^2-4*svy$A
n <- 2*svy$B*e-4*svy$C
df <- data.table(P=seq(1/pop,1,1/pop))
df$p <- 1/pop
df$z <- mean*(-(svy$B/2)-((2*m*df$P+n)*((m*(df$P^2)+n*df$P+e^2))^(-0.5))/4)
View(df)
GQ.list <- list()
pb <- txtProgressBar(0,nrow(parameters_GQ),style=3)
for(i in 1:nrow(parameters_GQ)){
svy <- parameters_GQ[i]
mean <- svy$mean*12/365.2424
pop <- svy$ReqYearPopulation*1000
e <- -(svy$A+svy$B+svy$C+1)
m <- svy$B^2-4*svy$A
n <- 2*svy$B*e-4*svy$C
df <- data.table(P=seq(1/pop,1,1/pop))
df$p <- 1/pop
df$z <- mean*(-(svy$B/2)-((2*m*df$P+n)*((m*(df$P^2)+n*df$P+e^2))^(-0.5))/4)
GQ.list[[i]] <- df
setTxtProgressBar(pb,i)
}
GQ <- rbindlist(GQ.list)
rm(GQ.list)
GQ <- GQ[order(z)]
GQ$P <- cumsum(GQ$p)
GQ$P <- GQ$P/max(GQ$P)
View(GQ)
View(beta)
View(beta)
GQ$P <- seq(1/nrow(GQ),1,1/nrow(GQ))
beta$P <- seq(1/nrow(beta),1,1/nrow(beta))
